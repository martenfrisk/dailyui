{"version":3,"sources":["apps/calculator.tsx","Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Calculator","numb","useState","operantWait","setOperantWait","numbInput","setNumbInput","String","currOperand","setCurrOperand","decimal","setDecimal","showDecimal","setShowDecimal","handleNumber","Number","handleOperand","op","className","Math","ceil","log10","parseFloat","toFixed","toString","substring","onClick","map","item","Home","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12cc8454.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport '../styles/calculator.css'\r\n\r\nconst Calculator = () => {\r\n\tconst [ operantWait, setOperantWait ] = useState(false)\r\n\tconst [ numbInput, setNumbInput ] = useState(0)\r\n\tconst [ currOperand, setCurrOperand ] = useState(String)\r\n\tconst [ decimal, setDecimal ] = useState(false)\r\n\tconst [ showDecimal, setShowDecimal ] = useState(false)\r\n\r\n\tconst handleDecimal = () => {\r\n\t\tsetDecimal(() => true)\r\n\t}\r\n\r\n\tconst toFixedIfNecessary = (numb: any) => {\r\n\t\tif (Math.ceil(Math.log10(numb + 1)) > 8) {\r\n\t\t\treturn +parseFloat(numb).toFixed(4).toString().substring(0,7) + \"...\"\r\n\t\t} else {\r\n\t\t\treturn +parseFloat(numb).toFixed(4);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleNumber = (numb: number) => {\r\n\t\tif (operantWait) {\r\n\t\t\tif (currOperand === '+') {\r\n\t\t\t\tsetNumbInput(() => Number(numbInput) + numb)\r\n\t\t\t\tsetCurrOperand(() => '')\r\n\t\t\t} else if (currOperand === '-') {\r\n\t\t\t\tsetNumbInput(() => Number(numbInput) - numb)\r\n\t\t\t\tsetCurrOperand(() => '')\r\n\t\t\t} else if (currOperand === '÷') {\r\n\t\t\t\tsetNumbInput(() => Number(numbInput) / numb)\r\n\t\t\t\tsetCurrOperand(() => '')\r\n\t\t\t} else if (currOperand === 'x') {\r\n\t\t\t\tsetNumbInput(() => Number(numbInput) * numb)\r\n\t\t\t\tsetCurrOperand(() => '')\r\n\t\t\t}\r\n\t\t\tsetOperantWait(() => false)\r\n\t\t} else if (!operantWait && numbInput !== 0) {\r\n\t\t\tif (showDecimal) {\r\n\t\t\t\tsetNumbInput(() => Number(numbInput + '' + numb))\r\n\t\t\t} else {\r\n\t\t\t\tif (!decimal) {\r\n\t\t\t\t\tsetNumbInput(() => Number(numbInput + '' + numb))\r\n\t\t\t\t} else if (decimal) {\r\n\t\t\t\t\tsetNumbInput(() => Number(numbInput + '.' + numb))\r\n\t\t\t\t\tsetShowDecimal(() => true)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (!operantWait && numbInput === 0) {\r\n\t\t\tif (!decimal) {\r\n\t\t\t\tsetNumbInput(() => numb)\r\n\t\t\t} else if (decimal) {\r\n\t\t\t\tsetNumbInput(() => Number(numbInput + '.' + numb))\r\n\t\t\t\tsetShowDecimal(() => true)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOperand = (op: string) => {\r\n\t\tsetCurrOperand(() => op)\r\n\t\tsetOperantWait(() => true)\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetOperantWait(() => false)\r\n\t\tsetNumbInput(() => 0)\r\n\t\tsetCurrOperand(() => '')\r\n\t}\r\n\r\n\tconst numbers = [ 9, 8, 7, 6, 5, 4, 3, 2, 1 ]\r\n\r\n\treturn (\r\n\t\t<div className=\"flex\">\r\n\t\t\t<div className=\"calc-container\">\r\n\t\t\t\t<div className=\"top-container\">\r\n\t\t\t\t\t<div className=\"num-side\" />\r\n\t\t\t\t\t<div className=\"numdisplay-border\">\r\n\t\t\t\t\t\t<div className=\"number-display\">\r\n\t\t\t\t\t\t\t{currOperand} {toFixedIfNecessary(numbInput)}\r\n\t\t\t\t\t\t\t<p>.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"num-side\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"middle-container\">\r\n\t\t\t\t\t<div>Texas Instruments</div>\r\n\t\t\t\t\t<div>TI-108</div>\r\n\t\t\t\t\t<div className=\"solar-panel\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"numpad-border\">\r\n\t\t\t\t\t<div className=\"numpad\">\r\n\t\t\t\t\t\t<div className=\"top-left\">\r\n\t\t\t\t\t\t\t<div>+/-</div>\r\n\t\t\t\t\t\t\t<div>√</div>\r\n\t\t\t\t\t\t\t<div>%</div>\r\n\t\t\t\t\t\t\t<div>MRC</div>\r\n\t\t\t\t\t\t\t<div>M-</div>\r\n\t\t\t\t\t\t\t<div>M+</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"top-right\">\r\n\t\t\t\t\t\t\t<div onClick={() => handleOperand('÷')}>&nbsp;÷</div>\r\n\t\t\t\t\t\t\t<div onClick={() => handleOperand('x')}>&nbsp;X</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"numbers\">\r\n\t\t\t\t\t\t\t{numbers.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className=\"number-key\" onClick={() => handleNumber(item)}>\r\n\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"bottom-left\">\r\n\t\t\t\t\t\t\t<div onClick={handleReset}>ON/C</div>\r\n\t\t\t\t\t\t\t<div onClick={() => handleNumber(0)}>0</div>\r\n\t\t\t\t\t\t\t<div onClick={handleDecimal}>.</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"bottom-right\">\r\n\t\t\t\t\t\t\t<div onClick={() => handleOperand('-')}>&nbsp;–</div>\r\n\t\t\t\t\t\t\t<div onClick={() => handleOperand('+')}>&nbsp;+</div>\r\n\t\t\t\t\t\t\t<div>&nbsp;=</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Calculator\r\n","import React from 'react'\r\n\r\n\r\nconst Home = () => {\r\n  return <div>Home</div>\r\n}\r\nexport default Home","import React from 'react'\nimport { BrowserRouter, Switch, Route, Link} from 'react-router-dom'\nimport Calculator from './apps/calculator'\nimport Home from './Home'\n\nfunction App() {\n  return (\n    <>\n    \n    <BrowserRouter>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/calculator\">Calculator</Link>\n\n\n      <Switch>\n        <Route path=\"/calculator\">\n          <Calculator />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}